{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","preapredGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","cn","current","map","item","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EACiB,sBADjBA,EAEY,iBA2BLC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA3BiB,SAACC,EAAD,GAAuC,IAA7BL,EAA4B,EAA5BA,UAAWE,EAAiB,EAAjBA,WACtCI,EAAa,YAAOD,GAe1B,OAbIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAOT,GACL,KAAKH,EACH,OAAOW,EAAME,cAAcD,GAG7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,WAKjCT,EACMI,EAAcM,UAGhBN,EAOcO,CAAiBjB,EAAiB,CAAEI,YAAWE,eAEpE,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPd,EAAaJ,IAEfmB,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYjB,IAAcH,IAN9B,iCAYA,wBACEkB,QAAS,WACPd,EAAaJ,IAEfmB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYjB,IAAcH,IAN9B,4BAYA,wBACEkB,QAAS,WACPZ,GAAc,SAACe,GACb,OAAQA,MAGZF,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,YAA2B,IAAff,IARhB,qBAcCF,GAAaE,EACZ,wBACEa,QAAS,WACPd,EAAa,IACbE,GAAc,IAEhBa,KAAK,SACLF,UAAU,4BANZ,mBAWA,QAKDV,EAAae,KAAI,SAAAC,GAAI,OACpB,6BACE,oBAAI,UAAQ,OAAZ,SAAoBA,KADbA,UC9GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3b95da1c.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n/*eslint-disable */\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD = {\n  SORT_ALPHABETICALLY: 'Sort alphabetically',\n  SORT_BY_LENGTH: 'Sort by length',\n  REVERSE: 'Reverse',\n};\n\nconst getPreparedGoods = (goods, { sortField, isReversed }) => {\n  const preapredGoods = [...goods];\n\n  if (sortField) {\n    preapredGoods.sort((good1, good2) => {\n      switch(sortField) {\n        case SORT_FIELD.SORT_ALPHABETICALLY: {\n          return good1.localeCompare(good2);\n        }\n\n        case SORT_FIELD.SORT_BY_LENGTH:\n          return good1.length - good2.length\n      }\n    });\n  }\n\n  if(isReversed) {\n    return preapredGoods.reverse()\n  }\n\n  return preapredGoods\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, { sortField, isReversed })\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setSortField(SORT_FIELD.SORT_ALPHABETICALLY);\n          }}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_FIELD.SORT_ALPHABETICALLY,\n          })}\n          >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => {\n            setSortField(SORT_FIELD.SORT_BY_LENGTH);\n          }}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_FIELD.SORT_BY_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            setIsReversed((current) => {\n              return !current\n            })\n          }}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': isReversed === false\n          })}\n        >\n          Reverse\n        </button>\n\n        {sortField || isReversed ? (\n          <button\n            onClick={() => {\n              setSortField('')\n              setIsReversed(false)\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        ) : (\n          null\n        )}\n\n      </div>\n\n        {visibleGoods.map(item => (\n          <ul key={item}>\n            <li data-cy=\"Good\">{item}</li>\n          </ul>\n        ))}\n      </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}